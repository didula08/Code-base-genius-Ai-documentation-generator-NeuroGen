[
  {
    "file": "workspace\\repo\\docs\\conf.py",
    "functions": [],
    "classes": [],
    "imports": [
      "pallets_sphinx_themes",
      "pallets_sphinx_themes"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\conftest.py",
    "functions": [
      "runner"
    ],
    "classes": [],
    "imports": [
      "click.testing"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_arguments.py",
    "functions": [
      "test_nargs_star",
      "test_argument_unbounded_nargs_cant_have_default",
      "test_nargs_tup",
      "test_nargs_tup_composite",
      "test_nargs_mismatch_with_tuple_type",
      "test_nargs_err",
      "test_bytes_args",
      "test_file_args",
      "test_path_allow_dash",
      "test_file_atomics",
      "test_stdout_default",
      "test_nargs_envvar",
      "test_nargs_envvar_only_if_values_empty",
      "test_empty_nargs",
      "test_missing_arg",
      "test_missing_argument_string_cast",
      "test_implicit_non_required",
      "test_deprecated_usage",
      "test_deprecated_warning",
      "test_deprecated_required",
      "test_eat_options",
      "test_nargs_star_ordering",
      "test_nargs_specified_plus_star_ordering",
      "test_defaults_for_nargs",
      "test_multiple_param_decls_not_allowed",
      "test_multiple_not_allowed",
      "test_nargs_bad_default",
      "test_subcommand_help",
      "test_nested_subcommand_help",
      "test_when_argument_decorator_is_used_multiple_times_cls_is_preserved",
      "test_duplicate_names_warning",
      "copy",
      "copy",
      "copy",
      "copy",
      "from_bytes",
      "inout",
      "foo",
      "inout",
      "inout",
      "cmd",
      "cli",
      "cmd",
      "cmd2",
      "cmd",
      "cli",
      "cli",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cli",
      "cmd",
      "cli",
      "cmd",
      "subcmd",
      "foo",
      "bar",
      "cli",
      "copy",
      "cli",
      "copy"
    ],
    "classes": [
      "CustomArgument"
    ],
    "imports": [
      "unittest"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_basic.py",
    "functions": [
      "test_basic_functionality",
      "test_repr",
      "test_return_values",
      "test_basic_group",
      "test_group_commands_dict",
      "test_group_from_list",
      "test_string_option",
      "test_int_option",
      "test_uuid_option",
      "test_float_option",
      "test_boolean_switch",
      "test_boolean_flag",
      "test_boolean_conversion",
      "test_file_option",
      "test_file_lazy_mode",
      "test_path_option",
      "test_choice_option",
      "test_choice_argument",
      "test_choice_argument_enum",
      "test_choice_argument_custom_type",
      "test_choice_argument_none",
      "test_datetime_option_default",
      "test_datetime_option_custom",
      "test_required_option",
      "test_evaluation_order",
      "test_hidden_option",
      "test_hidden_command",
      "test_hidden_group",
      "test_summary_line",
      "test_help_invalid_default",
      "cli",
      "command",
      "group",
      "subcommand",
      "cli",
      "cli",
      "subcommand",
      "sub",
      "sub",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "input",
      "output",
      "input",
      "output",
      "input_non_lazy",
      "write_to_dir",
      "showtype",
      "exists",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "memo",
      "cli",
      "cli",
      "cli",
      "nope",
      "cli",
      "subgroup",
      "nope",
      "cli",
      "cmd",
      "__init__",
      "__str__"
    ],
    "classes": [
      "MyEnum",
      "MyClass"
    ],
    "imports": [
      "__future__",
      "itertools"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_chain.py",
    "functions": [
      "debug",
      "test_basic_chaining",
      "test_chaining_help",
      "test_chaining_with_options",
      "test_no_command_result_callback",
      "test_chaining_with_arguments",
      "test_pipeline",
      "test_args_and_chain",
      "test_group_arg_behavior",
      "test_group_chaining",
      "cli",
      "sdist",
      "bdist",
      "cli",
      "sdist",
      "bdist",
      "cli",
      "sdist",
      "bdist",
      "cli",
      "process_result",
      "cli",
      "sdist",
      "bdist",
      "cli",
      "process_pipeline",
      "make_uppercase",
      "make_strip",
      "cli",
      "a",
      "b",
      "c",
      "cli",
      "a",
      "cli",
      "l1a",
      "l2a",
      "l2b",
      "l1b",
      "processor",
      "processor",
      "bad_cli",
      "bad_cli2"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_commands.py",
    "functions": [
      "test_other_command_invoke",
      "test_other_command_forward",
      "test_forwarded_params_consistency",
      "test_auto_shorthelp",
      "test_command_no_args_is_help",
      "test_default_maps",
      "test_group_with_args",
      "test_custom_parser",
      "test_object_propagation",
      "test_other_command_invoke_with_defaults",
      "test_invoked_subcommand",
      "test_aliased_command_canonical_name",
      "test_group_add_command_name",
      "test_iter_params_for_processing",
      "test_help_param_priority",
      "test_unprocessed_options",
      "test_deprecated_in_help_messages",
      "test_deprecated_in_invocation",
      "test_command_parse_args_collects_option_prefixes",
      "test_group_parse_args_collects_base_option_prefixes",
      "test_group_invoke_collects_used_option_prefixes",
      "test_abort_exceptions_with_disabled_standalone_mode",
      "cli",
      "other_cmd",
      "test",
      "dist",
      "first",
      "second",
      "cli",
      "short",
      "special_chars",
      "long",
      "cli",
      "foo",
      "cli",
      "move",
      "cli",
      "test_callback",
      "cli",
      "other_cmd",
      "cli",
      "sync",
      "push",
      "print_and_exit",
      "cli",
      "cli",
      "cli",
      "deprecated_cmd",
      "test",
      "group",
      "command1",
      "command2",
      "group",
      "command1",
      "command2",
      "cli",
      "__init__",
      "parse_args",
      "get_usage",
      "get_help",
      "invoke",
      "cli",
      "sync",
      "get_command",
      "resolve_command"
    ],
    "classes": [
      "OptParseCommand",
      "AliasedGroup"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_command_decorators.py",
    "functions": [
      "test_command_no_parens",
      "test_custom_command_no_parens",
      "test_group_no_parens",
      "test_params_argument",
      "test_generate_name",
      "cli",
      "grp",
      "cli",
      "grp",
      "cmd1",
      "grp2",
      "cmd2",
      "cli",
      "f"
    ],
    "classes": [
      "CustomCommand",
      "CustomGroup"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_compat.py",
    "functions": [
      "test_is_jupyter_kernel_output"
    ],
    "classes": [
      "JupyterKernelFakeStream"
    ],
    "imports": [
      "click._compat"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_context.py",
    "functions": [
      "test_ensure_context_objects",
      "test_get_context_objects",
      "test_get_context_objects_no_ensuring",
      "test_get_context_objects_missing",
      "test_multi_enter",
      "test_global_context_object",
      "test_context_meta",
      "test_make_pass_meta_decorator",
      "test_make_pass_meta_decorator_doc",
      "test_context_pushing",
      "test_pass_obj",
      "test_close_before_pop",
      "test_close_before_exit",
      "test_multiple_eager_callbacks",
      "test_no_state_leaks",
      "test_with_resource",
      "test_make_pass_decorator_args",
      "test_propagate_show_default_setting",
      "test_exit_not_standalone",
      "test_parameter_source",
      "test_propagate_opt_prefixes",
      "cli",
      "test",
      "cli",
      "test",
      "cli",
      "test",
      "cli",
      "test",
      "cli",
      "cli",
      "set_language",
      "get_language",
      "cli",
      "cli",
      "show",
      "cli",
      "test_callback",
      "cli",
      "test",
      "cli",
      "cli",
      "cli",
      "messing_with_logger",
      "manager",
      "cli",
      "test1",
      "test2",
      "cli",
      "cli",
      "cli",
      "__init__",
      "__init__",
      "__init__",
      "callback",
      "foo",
      "foo",
      "reset_state",
      "set_state",
      "__init__",
      "set_state",
      "reset_loggers",
      "set_level",
      "__init__"
    ],
    "classes": [
      "Foo",
      "Foo",
      "Foo",
      "Foo",
      "NonExitingOption",
      "ExitingOption",
      "DebugLoggerOption",
      "Foo"
    ],
    "imports": [
      "contextlib",
      "click",
      "click",
      "click",
      "click.core",
      "click.decorators",
      "click.decorators"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_custom_classes.py",
    "functions": [
      "test_command_context_class",
      "test_context_invoke_type",
      "test_context_formatter_class",
      "test_group_command_class",
      "test_group_group_class",
      "test_group_group_class_self",
      "second",
      "first",
      "write_heading"
    ],
    "classes": [
      "CustomContext",
      "CustomCommand",
      "CustomContext",
      "CustomCommand",
      "CustomFormatter",
      "CustomContext",
      "CustomCommand",
      "CustomGroup",
      "CustomSubGroup",
      "CustomGroup",
      "CustomGroup"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_defaults.py",
    "functions": [
      "test_basic_defaults",
      "test_multiple_defaults",
      "test_nargs_plus_multiple",
      "test_multiple_flag_default",
      "test_flag_default_map",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "foo"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_formatting.py",
    "functions": [
      "test_basic_functionality",
      "test_wrapping_long_options_strings",
      "test_wrapping_long_command_name",
      "test_formatting_empty_help_lines",
      "test_formatting_usage_error",
      "test_formatting_usage_error_metavar_missing_arg",
      "test_formatting_usage_error_metavar_bad_arg",
      "test_formatting_usage_error_nested",
      "test_formatting_usage_error_no_help",
      "test_formatting_usage_custom_help",
      "test_formatting_custom_type_metavar",
      "test_truncating_docstring",
      "test_truncating_docstring_no_help",
      "test_removing_multiline_marker",
      "test_global_show_default",
      "test_formatting_with_options_metavar_empty",
      "test_help_formatter_write_text",
      "cli",
      "cli",
      "a_very_long",
      "command",
      "cli",
      "a_very_very_very_long",
      "command",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "foo",
      "cmd",
      "cmd",
      "cmd",
      "cli",
      "cli",
      "cli",
      "cmd1",
      "cli",
      "get_metavar"
    ],
    "classes": [
      "MyType"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_imports.py",
    "functions": [
      "test_light_imports"
    ],
    "classes": [],
    "imports": [
      "click._compat"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_info_dict.py",
    "functions": [
      "test_parameter",
      "test_command",
      "test_context",
      "test_paramtype_no_name"
    ],
    "classes": [
      "TestType"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_normalization.py",
    "functions": [
      "test_option_normalization",
      "test_choice_normalization",
      "test_command_normalization",
      "cli",
      "cli",
      "cli",
      "foo"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\tests\\test_options.py",
    "functions": [
      "test_prefixes",
      "test_invalid_option",
      "test_deprecated_usage",
      "test_deprecated_warning",
      "test_deprecated_required",
      "test_deprecated_prompt",
      "test_invalid_nargs",
      "test_nargs_tup_composite_mult",
      "test_counting",
      "test_unknown_options",
      "test_suggest_possible_options",
      "test_multiple_required",
      "test_init_good_default_list",
      "test_init_bad_default_list",
      "test_empty_envvar",
      "test_multiple_envvar",
      "test_boolean_envvar_normalization",
      "test_boolean_envvar_bad_values",
      "test_multiple_default_help",
      "test_show_default_default_map",
      "test_multiple_default_type",
      "test_multiple_default_composite_type",
      "test_parse_multiple_default_composite_type",
      "test_dynamic_default_help_unset",
      "test_dynamic_default_help_text",
      "test_dynamic_default_help_special_method",
      "test_intrange_default_help_text",
      "test_count_default_type_help",
      "test_file_type_help_default",
      "test_toupper_envvar_prefix",
      "test_nargs_envvar",
      "test_show_envvar",
      "test_show_envvar_auto_prefix",
      "test_show_envvar_auto_prefix_dash_in_command",
      "test_custom_validation",
      "test_callback_validates_prompt",
      "test_winstyle_options",
      "test_legacy_options",
      "test_missing_option_string_cast",
      "test_missing_required_flag",
      "test_missing_choice",
      "test_missing_envvar",
      "test_case_insensitive_choice",
      "test_case_insensitive_choice_returned_exactly",
      "test_option_help_preserve_paragraphs",
      "test_argument_custom_class",
      "test_option_custom_class",
      "test_option_custom_class_reusable",
      "test_help_option_custom_names_and_class",
      "test_bool_flag_with_type",
      "test_aliases_for_flags",
      "test_option_names",
      "test_flag_duplicate_names",
      "test_show_default_boolean_flag_name",
      "test_show_true_default_boolean_flag_value",
      "test_hide_false_default_boolean_flag_value",
      "test_show_default_string",
      "test_show_default_with_empty_string",
      "test_do_not_show_no_default",
      "test_do_not_show_default_empty_multiple",
      "test_show_default_precedence",
      "test_option_with_optional_value",
      "test_multiple_option_with_optional_value",
      "test_type_from_flag_value",
      "test_flag_value_and_default",
      "test_invalid_flag_definition",
      "test_envvar_flag_value",
      "test_bool_flag_auto_detection",
      "test_invalid_flag_combinations",
      "test_non_flag_with_non_negatable_default",
      "test_usage_show_choices",
      "test_choice_default_rendering",
      "test_duplicate_names_warning",
      "test_default_type_error_raises",
      "cli",
      "cmd",
      "cli",
      "copy",
      "cli",
      "cli",
      "cli",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cli",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cli",
      "foo_bar",
      "validate_pos_int",
      "cmd",
      "validate",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd2",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cmd1",
      "cmd2",
      "cmd",
      "cmd",
      "cli",
      "cli_alt",
      "cmd",
      "cli",
      "cmd",
      "cmd",
      "cmd",
      "cmd",
      "cli_with_choices",
      "cli_without_choices",
      "cli_with_choices",
      "cli",
      "cli",
      "__call__",
      "__str__",
      "get_default",
      "get_help_record",
      "get_help_record",
      "__bool__"
    ],
    "classes": [
      "HashType",
      "Number",
      "Letter",
      "Color",
      "ColorInt",
      "Value",
      "CustomArgument",
      "CustomOption",
      "CustomOption",
      "CustomHelpOption",
      "NonNegatable"
    ],
    "imports": [
      "click"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_parser.py",
    "functions": [
      "test_split_arg_string",
      "test_parser_default_prefixes",
      "test_parser_collects_prefixes"
    ],
    "classes": [],
    "imports": [
      "click.parser",
      "click.shell_completion"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_shell_completion.py",
    "functions": [
      "_get_completions",
      "_get_words",
      "test_command",
      "test_group",
      "test_nested_group",
      "test_group_command_same_option",
      "test_chained",
      "test_help_option",
      "test_argument_order",
      "test_argument_default",
      "test_type_choice",
      "test_choice_special_characters",
      "test_choice_conflicting_prefix",
      "test_option_count",
      "test_option_optional",
      "test_path_types",
      "test_absolute_path",
      "test_option_flag",
      "test_flag_option_with_nargs_option",
      "test_option_custom",
      "test_option_multiple",
      "test_option_nargs",
      "test_argument_nargs",
      "test_double_dash",
      "test_hidden",
      "test_add_different_name",
      "test_completion_item_data",
      "_patch_for_completion",
      "test_full_source",
      "test_full_complete",
      "test_zsh_full_complete_with_colons",
      "test_context_settings",
      "test_choice_case_sensitive",
      "_restore_available_shells",
      "test_add_completion_class",
      "test_add_completion_class_with_name",
      "test_add_completion_class_decorator",
      "test_files_closed",
      "custom",
      "complete",
      "cli"
    ],
    "classes": [
      "MyshComplete",
      "MyshComplete",
      "MyshComplete"
    ],
    "imports": [
      "collections.abc",
      "click.core",
      "click.core",
      "click.core",
      "click.core",
      "click.shell_completion",
      "click.shell_completion",
      "click.shell_completion",
      "click.types",
      "click.types",
      "click.types"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_termui.py",
    "functions": [
      "_create_progress",
      "test_progressbar_strip_regression",
      "test_progressbar_length_hint",
      "test_progressbar_no_tty",
      "test_progressbar_hidden_manual",
      "test_progressbar_time_per_iteration",
      "test_progressbar_eta",
      "test_progressbar_format_eta",
      "test_progressbar_format_pos",
      "test_progressbar_format_bar",
      "test_progressbar_format_progress_line",
      "test_progressbar_format_progress_line_with_show_func",
      "test_progressbar_init_exceptions",
      "test_progressbar_iter_outside_with_exceptions",
      "test_progressbar_is_iterator",
      "test_choices_list_in_prompt",
      "test_file_prompt_default_format",
      "test_secho",
      "test_secho_non_text",
      "test_progressbar_yields_all_items",
      "test_progressbar_update",
      "test_progressbar_item_show_func",
      "test_progressbar_update_with_item_show_func",
      "test_progress_bar_update_min_steps",
      "test_getchar_windows",
      "test_getchar_special_key_windows",
      "test_getchar_windows_exceptions",
      "test_fast_edit",
      "test_edit",
      "test_prompt_required_with_required",
      "test_prompt_required_false",
      "test_confirmation_prompt",
      "test_false_show_default_cause_no_default_display_in_prompt",
      "__init__",
      "advance_time",
      "time",
      "cli",
      "cli",
      "cli",
      "cli",
      "item_show_func",
      "cli",
      "cli_with_choices",
      "cli_without_choices",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cmd",
      "__init__",
      "__length_hint__",
      "__iter__",
      "__next__"
    ],
    "classes": [
      "FakeClock",
      "Hinted"
    ],
    "imports": [
      "click._compat"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_testing.py",
    "functions": [
      "test_runner",
      "test_echo_stdin_stream",
      "test_echo_stdin_prompts",
      "test_runner_with_stream",
      "test_prompts",
      "test_getchar",
      "test_catch_exceptions",
      "test_catch_exceptions_cli_runner",
      "test_with_color",
      "test_with_color_errors",
      "test_with_color_but_pause_not_blocking",
      "test_exit_code_and_output_from_sys_exit",
      "test_env",
      "test_stderr",
      "test_args",
      "test_setting_prog_name_in_extra",
      "test_command_standalone_mode_returns_value",
      "test_file_stdin_attrs",
      "test_isolated_runner",
      "test_isolated_runner_custom_tempdir",
      "test_isolation_stderr_errors",
      "test_isolation_flushes_unflushed_stderr",
      "test",
      "test",
      "test_python_input",
      "test_prompt",
      "test_hidden_prompt",
      "test_multiple_prompts",
      "test",
      "test",
      "test",
      "continue_it",
      "getchar_echo",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli",
      "cli_string",
      "cli_string_ctx_exit",
      "cli_int",
      "cli_int_ctx_exit",
      "cli_float",
      "cli_float_ctx_exit",
      "cli_no_error",
      "cli_env",
      "cli_stderr",
      "cli_empty_stderr",
      "cli_args",
      "cli",
      "cli",
      "cli",
      "cli",
      "format_message"
    ],
    "classes": [
      "CustomError",
      "CustomError",
      "CLIError"
    ],
    "imports": [
      "io",
      "click.exceptions",
      "click.testing"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_types.py",
    "functions": [
      "test_range",
      "test_range_fail",
      "test_float_range_no_clamp_open",
      "test_cast_multi_default",
      "test_path_type",
      "_symlinks_supported",
      "test_path_resolve_symlink",
      "_non_utf8_filenames_supported",
      "test_path_surrogates",
      "test_file_surrogates",
      "test_file_error_surrogates",
      "test_invalid_path_with_esc_sequence",
      "test_choice_get_invalid_choice_message",
      "no_access"
    ],
    "classes": [],
    "imports": [
      "click"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\test_utils.py",
    "functions": [
      "test_echo",
      "test_echo_custom_file",
      "test_echo_no_streams",
      "test_styling",
      "test_unstyle_other_ansi",
      "test_filename_formatting",
      "test_prompts",
      "test_confirm_repeat",
      "test_prompts_abort",
      "test_prompts_eof",
      "_test_gen_func",
      "_test_gen_func_fails",
      "_test_gen_func_echo",
      "_test_simulate_keyboard_interrupt",
      "test_echo_via_pager",
      "test_echo_color_flag",
      "test_prompt_cast_default",
      "test_echo_writing_to_standard_error",
      "test_echo_with_capsys",
      "test_open_file",
      "test_open_file_pathlib_dash",
      "test_open_file_ignore_errors_stdin",
      "test_open_file_respects_ignore",
      "test_open_file_ignore_invalid_utf8",
      "test_open_file_ignore_no_encoding",
      "test_open_file_atomic_permissions_existing_file",
      "test_open_file_atomic_permissions_new_file",
      "test_iter_keepopenfile",
      "test_iter_lazyfile",
      "test_detect_program_name",
      "test_expand_args",
      "test_make_default_short_help",
      "cli",
      "test",
      "test_no",
      "f",
      "echo",
      "emulate_input",
      "cli",
      "cli",
      "cli",
      "__init__",
      "cli",
      "cli"
    ],
    "classes": [
      "MockMain"
    ],
    "imports": [
      "collections",
      "contextlib",
      "functools",
      "io",
      "pathlib",
      "tempfile",
      "unittest.mock",
      "click._compat"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\aliases\\aliases.py",
    "functions": [
      "read_config",
      "cli",
      "push",
      "pull",
      "clone",
      "commit",
      "status",
      "alias",
      "__init__",
      "add_alias",
      "read_config",
      "write_config",
      "get_command",
      "resolve_command"
    ],
    "classes": [
      "Config",
      "AliasedGroup"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\colors\\colors.py",
    "functions": [
      "cli"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\completion\\completion.py",
    "functions": [
      "cli",
      "ls",
      "get_env_vars",
      "show_env",
      "group",
      "list_users",
      "select_user"
    ],
    "classes": [],
    "imports": [
      "click.shell_completion"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\imagepipe\\imagepipe.py",
    "functions": [
      "cli",
      "process_commands",
      "processor",
      "generator",
      "copy_filename",
      "open_cmd",
      "save_cmd",
      "display_cmd",
      "resize_cmd",
      "crop_cmd",
      "convert_rotation",
      "convert_flip",
      "transpose_cmd",
      "blur_cmd",
      "smoothen_cmd",
      "emboss_cmd",
      "sharpen_cmd",
      "paste_cmd",
      "new_func",
      "new_func",
      "processor"
    ],
    "classes": [],
    "imports": [
      "functools",
      "PIL",
      "PIL",
      "PIL"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\inout\\inout.py",
    "functions": [
      "cli"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\naval\\naval.py",
    "functions": [
      "cli",
      "ship",
      "ship_new",
      "ship_move",
      "ship_shoot",
      "mine",
      "mine_set",
      "mine_remove"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\repo\\repo.py",
    "functions": [
      "cli",
      "clone",
      "delete",
      "setuser",
      "commit",
      "copy",
      "__init__",
      "set_config",
      "__repr__"
    ],
    "classes": [
      "Repo"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\termui\\termui.py",
    "functions": [
      "cli",
      "colordemo",
      "pager",
      "progress",
      "open",
      "locate",
      "edit",
      "clear",
      "pause",
      "menu",
      "process_slowly",
      "filter",
      "show_item"
    ],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\validation\\validation.py",
    "functions": [
      "validate_count",
      "cli",
      "convert"
    ],
    "classes": [
      "URL"
    ],
    "imports": [
      "urllib"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\complex\\complex\\cli.py",
    "functions": [
      "cli",
      "__init__",
      "log",
      "vlog",
      "list_commands",
      "get_command"
    ],
    "classes": [
      "Environment",
      "ComplexCLI"
    ],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\complex\\complex\\__init__.py",
    "functions": [],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\examples\\complex\\complex\\commands\\cmd_init.py",
    "functions": [
      "cli"
    ],
    "classes": [],
    "imports": [
      "complex.cli"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\complex\\complex\\commands\\cmd_status.py",
    "functions": [
      "cli"
    ],
    "classes": [],
    "imports": [
      "complex.cli"
    ]
  },
  {
    "file": "workspace\\repo\\examples\\complex\\complex\\commands\\__init__.py",
    "functions": [],
    "classes": [],
    "imports": []
  },
  {
    "file": "workspace\\repo\\src\\click\\core.py",
    "functions": [
      "_complete_visible_commands",
      "_check_nested_chain",
      "batch",
      "augment_usage_errors",
      "iter_params_for_processing",
      "_check_iter",
      "__getattr__",
      "sort_key",
      "__init__",
      "protected_args",
      "to_info_dict",
      "__enter__",
      "__exit__",
      "scope",
      "meta",
      "make_formatter",
      "with_resource",
      "call_on_close",
      "close",
      "command_path",
      "find_root",
      "find_object",
      "ensure_object",
      "lookup_default",
      "lookup_default",
      "lookup_default",
      "fail",
      "abort",
      "exit",
      "get_usage",
      "get_help",
      "_make_sub_context",
      "invoke",
      "invoke",
      "invoke",
      "forward",
      "set_parameter_source",
      "get_parameter_source",
      "__init__",
      "to_info_dict",
      "__repr__",
      "get_usage",
      "get_params",
      "format_usage",
      "collect_usage_pieces",
      "get_help_option_names",
      "get_help_option",
      "make_parser",
      "get_help",
      "get_short_help_str",
      "format_help",
      "format_help_text",
      "format_options",
      "format_epilog",
      "make_context",
      "parse_args",
      "invoke",
      "shell_complete",
      "main",
      "main",
      "main",
      "_main_shell_completion",
      "__call__",
      "__subclasscheck__",
      "__instancecheck__",
      "__init__",
      "to_info_dict",
      "add_command",
      "command",
      "command",
      "command",
      "group",
      "group",
      "group",
      "result_callback",
      "get_command",
      "list_commands",
      "collect_usage_pieces",
      "format_options",
      "format_commands",
      "parse_args",
      "invoke",
      "resolve_command",
      "shell_complete",
      "__init__",
      "add_source",
      "get_command",
      "list_commands",
      "__init__",
      "to_info_dict",
      "__repr__",
      "_parse_decls",
      "human_readable_name",
      "make_metavar",
      "get_default",
      "get_default",
      "get_default",
      "add_to_parser",
      "consume_value",
      "type_cast_value",
      "value_is_missing",
      "process_value",
      "resolve_envvar_value",
      "value_from_envvar",
      "handle_parse_result",
      "get_help_record",
      "get_usage_pieces",
      "get_error_hint",
      "shell_complete",
      "__init__",
      "to_info_dict",
      "get_error_hint",
      "_parse_decls",
      "add_to_parser",
      "get_help_record",
      "get_help_extra",
      "get_default",
      "get_default",
      "get_default",
      "prompt_for_value",
      "resolve_envvar_value",
      "value_from_envvar",
      "consume_value",
      "__init__",
      "human_readable_name",
      "make_metavar",
      "_parse_decls",
      "get_usage_pieces",
      "get_error_hint",
      "add_to_parser",
      "decorator",
      "decorator",
      "decorator",
      "_process_result",
      "check_iter",
      "_write_opts",
      "function",
      "convert",
      "convert",
      "convert"
    ],
    "classes": [
      "ParameterSource",
      "Context",
      "Command",
      "_FakeSubclassCheck",
      "_BaseCommand",
      "Group",
      "_MultiCommand",
      "CommandCollection",
      "Parameter",
      "Option",
      "Argument"
    ],
    "imports": [
      "__future__",
      "collections",
      "collections",
      "contextlib",
      "contextlib",
      "contextlib",
      "functools",
      "gettext",
      "gettext",
      "itertools",
      "types",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "formatting",
      "formatting",
      "globals",
      "globals",
      "parser",
      "parser",
      "parser",
      "termui",
      "termui",
      "termui",
      "utils",
      "utils",
      "utils",
      "utils",
      "utils",
      "utils",
      "shell_completion",
      "click.shell_completion",
      "shell_completion",
      "decorators",
      "decorators",
      "click.shell_completion",
      "decorators",
      "click.shell_completion"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\decorators.py",
    "functions": [
      "pass_context",
      "pass_obj",
      "make_pass_decorator",
      "pass_meta_key",
      "command",
      "command",
      "command",
      "command",
      "command",
      "group",
      "group",
      "group",
      "group",
      "group",
      "_param_memo",
      "argument",
      "option",
      "confirmation_option",
      "password_option",
      "version_option",
      "help_option",
      "new_func",
      "new_func",
      "decorator",
      "decorator",
      "decorator",
      "decorator",
      "decorator",
      "callback",
      "callback",
      "show_help",
      "new_func",
      "new_func"
    ],
    "classes": [],
    "imports": [
      "__future__",
      "functools",
      "gettext",
      "core",
      "core",
      "core",
      "core",
      "core",
      "core",
      "globals",
      "utils"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\exceptions.py",
    "functions": [
      "_join_param_hints",
      "__init__",
      "format_message",
      "__str__",
      "show",
      "__init__",
      "show",
      "__init__",
      "format_message",
      "__init__",
      "format_message",
      "__str__",
      "__init__",
      "format_message",
      "__init__",
      "__init__",
      "show",
      "__init__",
      "format_message",
      "__init__"
    ],
    "classes": [
      "ClickException",
      "UsageError",
      "BadParameter",
      "MissingParameter",
      "NoSuchOption",
      "BadOptionUsage",
      "BadArgumentUsage",
      "NoArgsIsHelpError",
      "FileError",
      "Abort",
      "Exit"
    ],
    "imports": [
      "__future__",
      "gettext",
      "gettext",
      "_compat",
      "globals",
      "utils",
      "utils",
      "core",
      "core",
      "core"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\formatting.py",
    "functions": [
      "measure_table",
      "iter_rows",
      "wrap_text",
      "join_options",
      "_flush_par",
      "__init__",
      "write",
      "indent",
      "dedent",
      "write_usage",
      "write_heading",
      "write_paragraph",
      "write_text",
      "write_dl",
      "section",
      "indentation",
      "getvalue"
    ],
    "classes": [
      "HelpFormatter"
    ],
    "imports": [
      "__future__",
      "contextlib",
      "gettext",
      "_compat",
      "parser",
      "_textwrap"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\globals.py",
    "functions": [
      "get_current_context",
      "get_current_context",
      "get_current_context",
      "push_context",
      "pop_context",
      "resolve_color_default"
    ],
    "classes": [],
    "imports": [
      "__future__",
      "threading",
      "core"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\parser.py",
    "functions": [
      "_unpack_args",
      "_split_opt",
      "_normalize_opt",
      "__getattr__",
      "_fetch",
      "__init__",
      "takes_value",
      "process",
      "__init__",
      "process",
      "__init__",
      "__init__",
      "add_option",
      "add_argument",
      "parse_args",
      "_process_args_for_args",
      "_process_args_for_options",
      "_match_long_opt",
      "_match_short_opt",
      "_get_value_from_state",
      "_process_opts"
    ],
    "classes": [
      "_Option",
      "_Argument",
      "_ParsingState",
      "_OptionParser"
    ],
    "imports": [
      "__future__",
      "collections",
      "gettext",
      "gettext",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "core",
      "core",
      "core",
      "core",
      "shell_completion",
      "difflib"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\shell_completion.py",
    "functions": [
      "shell_complete",
      "add_completion_class",
      "get_completion_class",
      "split_arg_string",
      "_is_incomplete_argument",
      "_start_of_option",
      "_is_incomplete_option",
      "_resolve_context",
      "_resolve_incomplete",
      "__init__",
      "__getattr__",
      "__init__",
      "func_name",
      "source_vars",
      "source",
      "get_completion_args",
      "get_completions",
      "format_completion",
      "complete",
      "_check_version",
      "source",
      "get_completion_args",
      "format_completion",
      "get_completion_args",
      "format_completion",
      "get_completion_args",
      "format_completion"
    ],
    "classes": [
      "CompletionItem",
      "ShellComplete",
      "BashComplete",
      "ZshComplete",
      "FishComplete"
    ],
    "imports": [
      "__future__",
      "gettext",
      "core",
      "core",
      "core",
      "core",
      "core",
      "core",
      "core",
      "utils"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\termui.py",
    "functions": [
      "hidden_prompt_func",
      "_build_prompt",
      "_format_default",
      "prompt",
      "confirm",
      "echo_via_pager",
      "progressbar",
      "progressbar",
      "progressbar",
      "clear",
      "_interpret_color",
      "style",
      "unstyle",
      "secho",
      "edit",
      "edit",
      "edit",
      "edit",
      "launch",
      "getchar",
      "raw_terminal",
      "pause",
      "prompt_func"
    ],
    "classes": [],
    "imports": [
      "__future__",
      "contextlib",
      "gettext",
      "_compat",
      "_compat",
      "exceptions",
      "exceptions",
      "globals",
      "types",
      "types",
      "types",
      "utils",
      "utils",
      "_termui_impl",
      "_termui_impl",
      "_termui_impl",
      "_termui_impl",
      "_termui_impl",
      "_termui_impl",
      "_termui_impl"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\testing.py",
    "functions": [
      "_pause_echo",
      "make_input_stream",
      "__init__",
      "__getattr__",
      "_echo",
      "read",
      "read1",
      "readline",
      "readlines",
      "__iter__",
      "__repr__",
      "__init__",
      "flush",
      "write",
      "__init__",
      "__del__",
      "__init__",
      "name",
      "mode",
      "__next__",
      "__init__",
      "output",
      "stdout",
      "stderr",
      "__repr__",
      "__init__",
      "get_default_prog_name",
      "make_env",
      "isolation",
      "invoke",
      "isolated_filesystem",
      "visible_input",
      "hidden_input",
      "_getchar",
      "should_strip_ansi"
    ],
    "classes": [
      "EchoingStdin",
      "BytesIOCopy",
      "StreamMixer",
      "_NamedTextIOWrapper",
      "Result",
      "CliRunner"
    ],
    "imports": [
      "__future__",
      "types",
      "_compat",
      "_typeshed",
      "core"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\types.py",
    "functions": [
      "_is_file_like",
      "convert_type",
      "to_info_dict",
      "__call__",
      "get_metavar",
      "get_missing_message",
      "convert",
      "split_envvar_value",
      "fail",
      "shell_complete",
      "arity",
      "__init__",
      "to_info_dict",
      "convert",
      "convert",
      "__repr__",
      "convert",
      "__repr__",
      "__init__",
      "to_info_dict",
      "_normalized_mapping",
      "normalize_choice",
      "get_metavar",
      "get_missing_message",
      "convert",
      "get_invalid_choice_message",
      "__repr__",
      "shell_complete",
      "__init__",
      "to_info_dict",
      "get_metavar",
      "_try_to_convert_date",
      "convert",
      "__repr__",
      "convert",
      "__init__",
      "to_info_dict",
      "convert",
      "_clamp",
      "_describe_range",
      "__repr__",
      "__repr__",
      "_clamp",
      "__repr__",
      "__init__",
      "_clamp",
      "str_to_bool",
      "convert",
      "__repr__",
      "convert",
      "__repr__",
      "__init__",
      "to_info_dict",
      "resolve_lazy_flag",
      "convert",
      "shell_complete",
      "__init__",
      "to_info_dict",
      "coerce_path_result",
      "convert",
      "shell_complete",
      "__init__",
      "to_info_dict",
      "name",
      "arity",
      "convert"
    ],
    "classes": [
      "ParamType",
      "CompositeParamType",
      "FuncParamType",
      "UnprocessedParamType",
      "StringParamType",
      "Choice",
      "DateTime",
      "_NumberParamTypeBase",
      "_NumberRangeBase",
      "IntParamType",
      "IntRange",
      "FloatParamType",
      "FloatRange",
      "BoolParamType",
      "UUIDParameterType",
      "File",
      "Path",
      "Tuple",
      "OptionHelpExtra"
    ],
    "imports": [
      "__future__",
      "datetime",
      "gettext",
      "gettext",
      "_compat",
      "_compat",
      "exceptions",
      "utils",
      "utils",
      "utils",
      "core",
      "core",
      "shell_completion",
      "click.shell_completion",
      "click.shell_completion",
      "click.shell_completion"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\utils.py",
    "functions": [
      "_posixify",
      "safecall",
      "make_str",
      "make_default_short_help",
      "echo",
      "get_binary_stream",
      "get_text_stream",
      "open_file",
      "format_filename",
      "get_app_dir",
      "_detect_program_name",
      "_expand_args",
      "wrapper",
      "__init__",
      "__getattr__",
      "__repr__",
      "open",
      "close",
      "close_intelligently",
      "__enter__",
      "__exit__",
      "__iter__",
      "__init__",
      "__getattr__",
      "__enter__",
      "__exit__",
      "__repr__",
      "__iter__",
      "__init__",
      "flush",
      "__getattr__"
    ],
    "classes": [
      "LazyFile",
      "KeepOpenFile",
      "PacifyFlushWrapper"
    ],
    "imports": [
      "__future__",
      "functools",
      "types",
      "types",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "globals",
      "glob",
      "exceptions"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\_compat.py",
    "functions": [
      "_make_text_stream",
      "is_ascii_encoding",
      "get_best_encoding",
      "_is_binary_reader",
      "_is_binary_writer",
      "_find_binary_reader",
      "_find_binary_writer",
      "_stream_is_misconfigured",
      "_is_compat_stream_attr",
      "_is_compatible_text_stream",
      "_force_correct_text_stream",
      "_force_correct_text_reader",
      "_force_correct_text_writer",
      "get_binary_stdin",
      "get_binary_stdout",
      "get_binary_stderr",
      "get_text_stdin",
      "get_text_stdout",
      "get_text_stderr",
      "_wrap_io_open",
      "open_stream",
      "strip_ansi",
      "_is_jupyter_kernel_output",
      "should_strip_ansi",
      "term_len",
      "isatty",
      "_make_cached_stream_func",
      "__init__",
      "__del__",
      "isatty",
      "__init__",
      "__getattr__",
      "read1",
      "readable",
      "writable",
      "seekable",
      "__init__",
      "name",
      "close",
      "__getattr__",
      "__enter__",
      "__exit__",
      "__repr__",
      "_get_argv_encoding",
      "auto_wrap_for_ansi",
      "_get_argv_encoding",
      "_get_windows_console_stream",
      "func",
      "_safe_write"
    ],
    "classes": [
      "_NonClosingTextIOWrapper",
      "_FixupStream",
      "_AtomicFile"
    ],
    "imports": [
      "__future__",
      "types",
      "weakref",
      "_winconsole"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\_termui_impl.py",
    "functions": [
      "pager",
      "_pipepager",
      "_tempfilepager",
      "_nullpager",
      "open_url",
      "_translate_ch_to_exc",
      "__init__",
      "__enter__",
      "__exit__",
      "__iter__",
      "__next__",
      "render_finish",
      "pct",
      "time_per_iteration",
      "eta",
      "format_eta",
      "format_pos",
      "format_pct",
      "format_bar",
      "format_progress_line",
      "render_progress",
      "make_step",
      "update",
      "finish",
      "generator",
      "__init__",
      "get_editor",
      "edit_files",
      "edit",
      "edit",
      "edit",
      "_unquote_file",
      "raw_terminal",
      "getchar",
      "raw_terminal",
      "getchar"
    ],
    "classes": [
      "ProgressBar",
      "Editor"
    ],
    "imports": [
      "__future__",
      "gettext",
      "io",
      "pathlib",
      "shutil",
      "types",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "_compat",
      "exceptions",
      "utils",
      "urllib.parse",
      "operator"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\_textwrap.py",
    "functions": [
      "_handle_long_word",
      "extra_indent",
      "indent_only"
    ],
    "classes": [
      "TextWrapper"
    ],
    "imports": [
      "__future__",
      "contextlib"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\_winconsole.py",
    "functions": [
      "_get_text_stdin",
      "_get_text_stdout",
      "_get_text_stderr",
      "_is_console",
      "_get_windows_console_stream",
      "get_buffer",
      "__init__",
      "isatty",
      "readable",
      "readinto",
      "writable",
      "_get_error_message",
      "write",
      "__init__",
      "name",
      "write",
      "writelines",
      "__getattr__",
      "isatty",
      "__repr__"
    ],
    "classes": [
      "_WindowsConsoleRawIOBase",
      "_WindowsConsoleReader",
      "_WindowsConsoleWriter",
      "ConsoleStream",
      "Py_buffer"
    ],
    "imports": [
      "__future__",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes",
      "ctypes.wintypes",
      "ctypes.wintypes",
      "ctypes.wintypes",
      "ctypes.wintypes",
      "_compat",
      "ctypes",
      "ctypes",
      "ctypes",
      "collections.abc",
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\src\\click\\__init__.py",
    "functions": [
      "__getattr__"
    ],
    "classes": [],
    "imports": [
      "__future__",
      "core",
      "core",
      "core",
      "core",
      "core",
      "core",
      "core",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "decorators",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "exceptions",
      "formatting",
      "formatting",
      "globals",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "termui",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "types",
      "utils",
      "utils",
      "utils",
      "utils",
      "utils",
      "utils",
      "core",
      "core",
      "parser"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_aliased_group.py",
    "functions": [
      "cli",
      "push",
      "pop",
      "get_command",
      "resolve_command"
    ],
    "classes": [
      "AliasedGroup"
    ],
    "imports": [
      "__future__",
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_confirmation_option.py",
    "functions": [
      "dropdb"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_group_kw_options.py",
    "functions": [
      "hello"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_help_option.py",
    "functions": [
      "hello"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_options.py",
    "functions": [
      "hello"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_password_option.py",
    "functions": [
      "encrypt"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_progressbar.py",
    "functions": [
      "test_length_is_int",
      "it",
      "test_generic_on_iterable"
    ],
    "classes": [],
    "imports": [
      "__future__",
      "typing_extensions",
      "click",
      "click._termui_impl"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_simple_example.py",
    "functions": [
      "hello"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  },
  {
    "file": "workspace\\repo\\tests\\typing\\typing_version_option.py",
    "functions": [
      "hello"
    ],
    "classes": [],
    "imports": [
      "typing_extensions"
    ]
  }
]